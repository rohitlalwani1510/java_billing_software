/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package genericbillingsoftware;

import java.awt.Color;
import java.awt.Font;
import java.util.Vector;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author rohit
 */
public
        class AddItemBill extends javax.swing.JPanel {

    /**
     * Creates new form AddItemBill
     */
    public AddBill bill;
    public Color errorColor;
    public void setBill(AddBill bill)
    {
        this.bill=bill;
    }
    public void getActiveItemsID()
    {
        Object[] items = SqlQueries.getActiveItems(SqlQueries.INT_TYPE);
        jComboBox1.removeAllItems();
        jComboBox1.addItem(null);
        for(Object item:items)
            jComboBox1.addItem((String) item);
        jComboBox1.setSelectedItem(null);
    }
    public void getActiveItemsName()
    {
        Object[] items = SqlQueries.getActiveItems(SqlQueries.STRING_TYPE);
        jComboBox2.removeAllItems();
        jComboBox2.addItem(null);
        for(Object item:items)
            jComboBox2.addItem((String) item);
        jComboBox2.setSelectedItem(null);
    }
    public
            AddItemBill() {
                errorColor = new Color(255, 186, 186);
        initComponents();
        getActiveItemsID();
        getActiveItemsName();
        itemResetMousePressed(null);
        itemQuantity.getDocument().addDocumentListener(new DocumentListener(){
                    @Override
                    public
                    void insertUpdate(DocumentEvent e) {
                        check();
//                        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                    }

                    @Override
                    public
                    void removeUpdate(DocumentEvent e) {
                        check();
//                        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                    }

                    @Override
                    public
                    void changedUpdate(DocumentEvent e) {
                        check();
//                        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                    }
                    public void check()
                {
                    if(itemQuantity.getText().length()==0)
                {
                        itemQuantity.setBackground(Color.WHITE);
                        totalItemCost.setText("Invalid quantity");
                }   
                    else
                {
                    try{
                        int a = Integer.parseInt(itemQuantity.getText());
                        if(a>0)
                {
                            itemQuantity.setBackground(Color.WHITE);
                            totalItemCost.setText(Float.toString(a*Float.parseFloat(costPerItem.getText())));
                }
                        else
                            throw new Exception();
                    }
                    catch(Exception error)
                {
                    itemQuantity.setBackground(errorColor);
                    totalItemCost.setText("Invalid quantity!");
                }
                }
                }
                });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        itemClose = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jComboBox2 = new javax.swing.JComboBox<>();
        itemAdd = new javax.swing.JButton();
        itemReset = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        itemQuantity = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        costPerItem = new javax.swing.JLabel();
        totalItemCost = new javax.swing.JLabel();

        setBackground(new java.awt.Color(204, 204, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("OR      Name");

        itemClose.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        itemClose.setText("Close");
        itemClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                itemCloseMousePressed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Select      ID");

        jComboBox1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jComboBox2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        itemAdd.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        itemAdd.setText("Add Item");
        itemAdd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                itemAddMousePressed(evt);
            }
        });

        itemReset.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        itemReset.setText("Reset");
        itemReset.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                itemResetMousePressed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel2.setText("Total Item Cost:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel4.setText("Quantity:");

        itemQuantity.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel5.setText("Cost Per Item:");

        costPerItem.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

        totalItemCost.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(156, 156, 156)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(itemQuantity, javax.swing.GroupLayout.DEFAULT_SIZE, 228, Short.MAX_VALUE)
                    .addComponent(costPerItem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(totalItemCost, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(187, 187, 187))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(itemClose))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(61, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(62, 62, 62))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(itemAdd)
                        .addGap(78, 78, 78)
                        .addComponent(itemReset)
                        .addGap(245, 245, 245))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(itemClose)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(costPerItem, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(itemQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(totalItemCost, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(itemAdd)
                    .addComponent(itemReset))
                .addGap(65, 65, 65))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void itemCloseMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_itemCloseMousePressed
        // TODO add your handling code here:
        JDialog dialog = (JDialog) this.getRootPane().getParent();
        dialog.getParent().setEnabled(true);
        dialog.dispose();
    }//GEN-LAST:event_itemCloseMousePressed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        if(jComboBox1.getSelectedItem()==null)
            itemResetMousePressed(null);
        else
        {
            ItemObject item = SqlQueries.getItemFromID((String) jComboBox1.getSelectedItem());
            jComboBox2.setSelectedItem(item.getName());
            costPerItem.setText(item.getCost());
            itemQuantity.setText("1");
            itemQuantity.setBackground(Color.WHITE);
            totalItemCost.setText(item.getCost());
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
        if(jComboBox2.getSelectedItem()==null)
            itemResetMousePressed(null);
        else
        {
            ItemObject item = SqlQueries.getItemFromName((String) jComboBox2.getSelectedItem());
            jComboBox1.setSelectedItem(item.getID());
            costPerItem.setText(item.getCost());
            itemQuantity.setText("1");
            itemQuantity.setBackground(Color.WHITE);
            totalItemCost.setText(item.getCost());
        }
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void itemAddMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_itemAddMousePressed
        // TODO add your handling code here:
        if(jComboBox1.getSelectedItem()==null || jComboBox2.getSelectedItem()==null || itemQuantity.getText().length()==0 || 
           itemQuantity.getBackground()==errorColor)
        {
            JLabel message = new JLabel();
            message.setText("None or Invalid item selected!");
            message.setFont(new Font("Tahoma", 0, 18));
            JOptionPane.showMessageDialog(null, message);
        }
        else
        {
            DefaultTableModel model = (DefaultTableModel) bill.getTable().getModel();
            String itemID = (String) jComboBox1.getSelectedItem();
            boolean already = false;
            Vector dataVector = model.getDataVector();
            for(Object curVector: dataVector)
            {
                Vector cur = (Vector) curVector;
                if((Integer)cur.get(0)==Integer.parseInt(itemID))
                {
                    already = true;
                    break;
                }
            }
            if(already)
            {
                JLabel message = new JLabel("Item already exists in bill!");
                message.setFont(new Font("Tahoma",0,18));
                JOptionPane.showMessageDialog(null,message);
                itemResetMousePressed(null);
                return;
            }
            ItemObject item = SqlQueries.getItemFromID(itemID);
            model.addRow(new Object[]{Integer.parseInt(item.getID()),item.getName(),Float.parseFloat(item.getCost()),
            Integer.parseInt(itemQuantity.getText()),Float.parseFloat(totalItemCost.getText())});
            itemResetMousePressed(null);
            bill.updateTotal();
        }
    }//GEN-LAST:event_itemAddMousePressed

    private void itemResetMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_itemResetMousePressed
        // TODO add your handling code here:
        jComboBox1.setSelectedItem(null);
        jComboBox2.setSelectedItem(null);
        itemQuantity.setText("");
        itemQuantity.setBackground(Color.WHITE);
        costPerItem.setText("No item selected");
        totalItemCost.setText("No item selected");
    }//GEN-LAST:event_itemResetMousePressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel costPerItem;
    private javax.swing.JButton itemAdd;
    private javax.swing.JButton itemClose;
    private javax.swing.JTextField itemQuantity;
    private javax.swing.JButton itemReset;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel totalItemCost;
    // End of variables declaration//GEN-END:variables
}
