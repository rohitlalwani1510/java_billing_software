/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package genericbillingsoftware;

import java.awt.Color;
import java.awt.Font;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

/**
 *
 * @author rohit
 */
public
        class UpdateEmail extends javax.swing.JPanel {

    /**
     * Creates new form UpdateEmail
     */
    public Color errorColor;
    public
            UpdateEmail() {
        errorColor = new Color(255,186,186);
        initComponents();
        updateEmail.setEchoChar((char)0);
        updateEmail.getDocument().addDocumentListener(new DocumentListener(){
                    @Override
                    public
                    void insertUpdate(DocumentEvent e) {
                        myFunc();
//                        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                    }

                    @Override
                    public
                    void removeUpdate(DocumentEvent e) {
                        myFunc();
//                        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                    }

                    @Override
                    public
                    void changedUpdate(DocumentEvent e) {
                        myFunc();
//                        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                    }
                    public void myFunc()
                    {
                        String regex = "^[a-zA-Z0-9]+[a-zA-Z0-9.]*[a-zA-Z0-9.]+@[a-zA-Z0-9]+.[a-zA-Z]+";
                        Pattern p = Pattern.compile(regex);
                        Matcher m = p.matcher(updateEmail.getText());
                        if(!updateEmail.getText().equals("") && !m.matches())
                            updateEmail.setBackground(errorColor);
                        else
                            updateEmail.setBackground(Color.WHITE);
                    }
        });
        updateEmailPassword.getDocument().addDocumentListener(new DocumentListener(){
            @Override
            public
            void insertUpdate(DocumentEvent e) {
                password();
//                throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }

            @Override
            public
            void removeUpdate(DocumentEvent e) {
                password();
//                throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }

            @Override
            public
            void changedUpdate(DocumentEvent e) {
                password();
//                throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }
            public void password()
                {
                    if(updateEmailPassword.getText().length()==0 || updateEmailPassword.getText().length()>7)
                        updateEmailPassword.setBackground(Color.WHITE);
                    else
                        updateEmailPassword.setBackground(errorColor);
                }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        updateEmailClose = new javax.swing.JButton();
        viewName3 = new javax.swing.JLabel();
        updateEmail = new javax.swing.JPasswordField();
        viewName4 = new javax.swing.JLabel();
        updateEmailPassword = new javax.swing.JPasswordField();
        jCheckBox1 = new javax.swing.JCheckBox();
        updateEmailButton = new javax.swing.JButton();
        updateEmailReset = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 204, 255));

        updateEmailClose.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        updateEmailClose.setText("Close");
        updateEmailClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                updateEmailCloseMousePressed(evt);
            }
        });

        viewName3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        viewName3.setText("New Email");

        updateEmail.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        viewName4.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        viewName4.setText("Current Password:");

        updateEmailPassword.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jCheckBox1.setBackground(new java.awt.Color(204, 204, 255));
        jCheckBox1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jCheckBox1.setText("Show Password");
        jCheckBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox1ItemStateChanged(evt);
            }
        });

        updateEmailButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        updateEmailButton.setText("Update Email");
        updateEmailButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                updateEmailButtonMousePressed(evt);
            }
        });
        updateEmailButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateEmailButtonActionPerformed(evt);
            }
        });

        updateEmailReset.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        updateEmailReset.setText("Reset");
        updateEmailReset.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                updateEmailResetMousePressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 462, Short.MAX_VALUE)
                .addComponent(updateEmailClose))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(48, 48, 48)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(79, 79, 79)
                            .addComponent(updateEmailButton)
                            .addGap(46, 46, 46)
                            .addComponent(updateEmailReset)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jCheckBox1))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(viewName4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(viewName3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(89, 89, 89)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(updateEmail)
                                    .addComponent(updateEmailPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 229, Short.MAX_VALUE)))))
                    .addGap(48, 48, 48)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(updateEmailClose)
                .addGap(0, 387, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(96, 96, 96)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(viewName3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(updateEmail))
                            .addGap(66, 66, 66)
                            .addComponent(viewName4))
                        .addComponent(updateEmailPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jCheckBox1)
                    .addGap(45, 45, 45)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(updateEmailButton, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(updateEmailReset))
                    .addContainerGap(97, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void updateEmailCloseMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateEmailCloseMousePressed
        // TODO add your handling code here:
        JDialog dialog = (JDialog) this.getRootPane().getParent();
        StandardDashBoard db = (StandardDashBoard) dialog.getParent();
        db.setEnabled(true);
        db.setLoggedInEmail(updateEmail.getText());
        dialog.dispose();
    }//GEN-LAST:event_updateEmailCloseMousePressed

    private void jCheckBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox1ItemStateChanged
        // TODO add your handling code here:
        if(jCheckBox1.isSelected())
        updateEmailPassword.setEchoChar((char)0);
        else
        updateEmailPassword.setEchoChar('*');
    }//GEN-LAST:event_jCheckBox1ItemStateChanged

    private void updateEmailButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateEmailButtonMousePressed
        // TODO add your handling code here:
        if(updateEmail.getBackground()==errorColor || updateEmail.getText().length()==0 ||
            updateEmailPassword.getBackground()==errorColor || updateEmailPassword.getText().length()==0)
        {
            JLabel message = new JLabel("Invalid password!");
            message.setFont(new Font("Tahoma",0,18));
            JOptionPane.showMessageDialog(null, message);
        }
        else
        {
            JDialog dialog = (JDialog) this.getRootPane().getParent();
            StandardDashBoard db = (StandardDashBoard) dialog.getParent();
            String email = db.getLoggedInEmail();
            String updateEmailResult = SqlQueries.changeEmail(email, updateEmailPassword.getText(), updateEmail.getText());
            if(updateEmailResult.equals("true"))
            {
                JLabel message = new JLabel("Email updated successfully!");
                message.setFont(new Font("Tahoma",0,18));
                JOptionPane.showMessageDialog(null, message);
                updateEmailCloseMousePressed(null);
            }
            else
            {
                JLabel message = new JLabel(updateEmailResult);
                message.setFont(new Font("Tahoma",0,18));
                JOptionPane.showMessageDialog(null, message);
            }
        }
    }//GEN-LAST:event_updateEmailButtonMousePressed

    private void updateEmailButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateEmailButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_updateEmailButtonActionPerformed

    private void updateEmailResetMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateEmailResetMousePressed
        // TODO add your handling code here:
        updateEmailPassword.setText("");
        updateEmailPassword.setBackground(Color.WHITE);
        updateEmail.setText("");
        updateEmail.setBackground(Color.WHITE);
    }//GEN-LAST:event_updateEmailResetMousePressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JPasswordField updateEmail;
    private javax.swing.JButton updateEmailButton;
    private javax.swing.JButton updateEmailClose;
    private javax.swing.JPasswordField updateEmailPassword;
    private javax.swing.JButton updateEmailReset;
    private javax.swing.JLabel viewName3;
    private javax.swing.JLabel viewName4;
    // End of variables declaration//GEN-END:variables
}
